name: CI/CD

on:
  push:
  pull_request:

env:
  AWS_REGION: "eu-west-1"
  WEBCOMPONENT_PROD: "https://cdn.webcomponents.opendatahub.bz.it/dist/9232cce6-2f39-11eb-adc1-0242ac120002/noi_maps_widget.min.js"

jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      DOCKER_IMAGE: app
      DOCKER_TAG: ${{github.sha}}

    steps:
      - uses: actions/checkout@v2

      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        env:
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}

      - name: Build
        run: docker-compose -f infrastructure/docker-compose.build.yml build
    
      - name: Shut down
        run: docker-compose -f infrastructure/docker-compose.build.yml down || true

  deploy-test:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test
    env:
      AWS_S3_BUCKET_NAME : "it.bz.noi.maps.test"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Sync to S3 bucket
        uses: noi-techpark/github-actions/aws-s3-bucket-sync@v2
        with:
          access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          s3-bucket-name: ${{ env.AWS_S3_BUCKET_NAME }}
          folder: ./

  deploy-prod:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/prod'
    needs: test
    concurrency: deploy-prod
    env:
      AWS_S3_BUCKET_NAME : "it.bz.noi.maps"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Change to production webcomponent
        run: grep -rl 'cdn.webcomponents'|xargs sed -i -e 's%https://cdn.webcomponents.*noi_maps_widget.min.js%${{env.WEBCOMPONENT_PROD}}%g'

      - name: Sync to S3 bucket
        uses: noi-techpark/github-actions/aws-s3-bucket-sync@v2
        with:
          access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          s3-bucket-name: ${{ env.AWS_S3_BUCKET_NAME }}
          folder: ./